services:
  # MongoDB for persistent storage
  mongodb:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: trading_password_2024
      MONGO_INITDB_DATABASE: btc_trading_ai
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - trading_network

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass trading_cache_2024
    volumes:
      - redis_data:/data
    networks:
      - trading_network

  # MongoDB Web UI
  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: trading_password_2024
      ME_CONFIG_MONGODB_URL: mongodb://admin:trading_password_2024@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: btc_admin
      ME_CONFIG_BASICAUTH_PASSWORD: trading_dashboard_2024
    depends_on:
      - mongodb
    networks:
      - trading_network

  # Redis Commander (Redis Web UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:trading_cache_2024
      HTTP_USER: btc_admin
      HTTP_PASSWORD: trading_dashboard_2024
    depends_on:
      - redis
    networks:
      - trading_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  trading_network:
    driver: bridge 