version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: btc-mongodb-prod
    restart: always
    ports:
      - "127.0.0.1:27017:27017"  # Only bind to localhost
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: btc_trading
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - btc-network
    command: --auth --bind_ip_all
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  bitcoin-trading-ai:
    image: ghcr.io/mohamedragab33/ai_assistant/bitcoin-trading-ai:latest
    container_name: btc-trading-ai-prod
    restart: always
    ports:
      - "127.0.0.1:3000:3000"  # Frontend
      - "127.0.0.1:8000:8000"  # Main API  
      - "127.0.0.1:8001:8001"  # Auth API
    environment:
      - NODE_ENV=production
      - MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/btc_trading?authSource=admin
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_BASE_URL=${API_BASE_URL}
      - AUTH_API_BASE_URL=${AUTH_API_BASE_URL}
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY:-}
    depends_on:
      - mongodb
    networks:
      - btc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  nginx:
    image: nginx:alpine
    container_name: btc-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - bitcoin-trading-ai
    networks:
      - btc-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Log aggregator (optional)
  loki:
    image: grafana/loki:2.9.0
    container_name: btc-loki-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - loki_data:/loki
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
    networks:
      - btc-network
    command: -config.file=/etc/loki/local-config.yaml

  # Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: btc-prometheus-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - btc-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  nginx_logs:
    driver: local
  loki_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  btc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 